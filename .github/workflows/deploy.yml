name: Deploy to Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Load Secrets from 1Password
        id: load_secrets
        uses: 1password/load-secrets-action@v3
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          API_ENDPOINT: op://Service Account Vault/VassistantApiEndpoint/credential
          AWS_ROLE_TO_ASSUME: op://Service Account Vault/IAM Role DeployVassistant/credential
          CLOUDFRONT_DISTRIBUTION_ID: op://Service Account Vault/VassistantCloudFront/credential

      - name: Build
        run: npm run build
        env:
          API_ENDPOINT: ${{ steps.load_secrets.outputs.API_ENDPOINT }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ steps.load_secrets.outputs.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Package for Lambda
        run: |
          cp -r public .next/standalone/
          cp -r .next/static .next/standalone/.next/
          cd .next/standalone
          zip -r ../../deployment.zip .

      - name: Deploy to Lambda
        run: aws lambda update-function-code --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --zip-file fileb://deployment.zip

      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id ${{ steps.load_secrets.outputs.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"